{"componentChunkName":"component---src-pages-tech-writings-markdown-remark-frontmatter-slug-jsx","path":"/tech-writings/random-python-snippets-01/","result":{"data":{"markdownRemark":{"html":"<h1>Singleton Metaclass</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> Any\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Singleton</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token triple-quoted-string string\">\"\"\" Usage: class ClassName(metaclass=Singleton) \"\"\"</span>\r\n\r\n    _instances <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__call__</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> Any<span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">if</span> cls <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> cls<span class=\"token punctuation\">.</span>_instances<span class=\"token punctuation\">:</span>\r\n            instance <span class=\"token operator\">=</span> <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__call__<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>kwargs<span class=\"token punctuation\">)</span>\r\n            cls<span class=\"token punctuation\">.</span>_instances<span class=\"token punctuation\">[</span>cls<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> instance\r\n        <span class=\"token keyword\">return</span> cls<span class=\"token punctuation\">.</span>_instances<span class=\"token punctuation\">[</span>cls<span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>Basic Stdlib Logger</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> logging\r\n\r\n<span class=\"token keyword\">from</span> src<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>path_manager <span class=\"token keyword\">import</span> PathManager\r\n<span class=\"token keyword\">from</span> src<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>singleton <span class=\"token keyword\">import</span> Singleton\r\n\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ConsoleLogger</span><span class=\"token punctuation\">(</span>metaclass<span class=\"token operator\">=</span>Singleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"ConsoleLogger\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        self<span class=\"token punctuation\">.</span>logger <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>getLogger<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token comment\"># Console Handler</span>\r\n        console_handler <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>StreamHandler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n        console_handler<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\r\n        formatter <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>Formatter<span class=\"token punctuation\">(</span><span class=\"token string\">u'%(asctime)s - %(name)s - %(levelname)s - %(message)s'</span><span class=\"token punctuation\">)</span>\r\n        console_handler<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>console_handler<span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token comment\"># File Handler</span>\r\n        log_file_path <span class=\"token operator\">=</span> PathManager<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>root<span class=\"token punctuation\">.</span>joinpath<span class=\"token punctuation\">(</span><span class=\"token string\">'app.log'</span><span class=\"token punctuation\">)</span>\r\n        file_handler <span class=\"token operator\">=</span> logging<span class=\"token punctuation\">.</span>FileHandler<span class=\"token punctuation\">(</span>log_file_path<span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span>\r\n        file_handler<span class=\"token punctuation\">.</span>setLevel<span class=\"token punctuation\">(</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\r\n        file_handler<span class=\"token punctuation\">.</span>setFormatter<span class=\"token punctuation\">(</span>formatter<span class=\"token punctuation\">)</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>addHandler<span class=\"token punctuation\">(</span>file_handler<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">info</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">warning</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>warning<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">error</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">critical</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>critical<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>Basic SMTP Client</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> smtplib\r\n<span class=\"token keyword\">from</span> email<span class=\"token punctuation\">.</span>mime<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">import</span> MIMEText\r\n<span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass\r\n<span class=\"token keyword\">from</span> typing <span class=\"token keyword\">import</span> List\r\n\r\n<span class=\"token keyword\">from</span> src<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>logger <span class=\"token keyword\">import</span> ConsoleLogger\r\n\r\n\r\n<span class=\"token decorator annotation punctuation\">@dataclass</span>\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SMTPConfig</span><span class=\"token punctuation\">:</span>\r\n    smtp_server<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\r\n    smtp_port<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span>\r\n    smtp_username<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\r\n    smtp_password<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\r\n    sender<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span>\r\n    recipients<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">]</span>\r\n\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">send_email</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">:</span> SMTPConfig<span class=\"token punctuation\">,</span> subject<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">:</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    logger <span class=\"token operator\">=</span> ConsoleLogger<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    msg <span class=\"token operator\">=</span> MIMEText<span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span>\r\n    msg<span class=\"token punctuation\">[</span><span class=\"token string\">'Subject'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> subject\r\n    msg<span class=\"token punctuation\">[</span><span class=\"token string\">'From'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> config<span class=\"token punctuation\">.</span>sender\r\n    msg<span class=\"token punctuation\">[</span><span class=\"token string\">'To'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">', '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>recipients<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">with</span> smtplib<span class=\"token punctuation\">.</span>SMTP_SSL<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>smtp_server<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>smtp_port<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> server<span class=\"token punctuation\">:</span>\r\n            server<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>smtp_username<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>smtp_password<span class=\"token punctuation\">)</span>\r\n            server<span class=\"token punctuation\">.</span>sendmail<span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">.</span>recipients<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>as_string<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n            logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Email [</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>subject<span class=\"token punctuation\">}</span></span><span class=\"token string\">] sent successfully!\"</span></span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\r\n        logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Failed to send email. Error: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1>SSH Keypair Generator</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\r\n<span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path\r\n\r\n<span class=\"token keyword\">import</span> paramiko\r\n\r\n<span class=\"token keyword\">from</span> src<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>logger <span class=\"token keyword\">import</span> ConsoleLogger\r\n<span class=\"token keyword\">from</span> src<span class=\"token punctuation\">.</span>utils<span class=\"token punctuation\">.</span>path_manager <span class=\"token keyword\">import</span> PathManager\r\n\r\n\r\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SshUtils</span><span class=\"token punctuation\">:</span>\r\n    logger <span class=\"token operator\">=</span> ConsoleLogger<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> keyfile_name<span class=\"token operator\">=</span><span class=\"token string\">\"id_rsa\"</span><span class=\"token punctuation\">,</span> passphrase<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token triple-quoted-string string\">\"\"\"\r\n        Creates an SSH key-pair inside playbooks/profile folder with name `key_name`.pub for public, and\r\n        `key_name` for private.\r\n\r\n        Usage example:\r\n        ssh_utils = SshUtils(profile_folder=\"test_profile\", key_name=\"id_rsa\", passphrase=\"Password1234!\")\r\n        ssh_utils.create_ssh_key_pair(key_bits=4096)\r\n        print(ssh_utils.read_public_key())\r\n\r\n        Passphrase is optional and can be omitted.\r\n        \"\"\"</span>\r\n        self<span class=\"token punctuation\">.</span>key_dir <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>expanduser<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>get_dir<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        self<span class=\"token punctuation\">.</span>key_name <span class=\"token operator\">=</span> keyfile_name\r\n        self<span class=\"token punctuation\">.</span>passphrase <span class=\"token operator\">=</span> passphrase\r\n        self<span class=\"token punctuation\">.</span>priv_key_path <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>key_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>joinpath<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>key_name<span class=\"token punctuation\">)</span>\r\n        self<span class=\"token punctuation\">.</span>pub_key_path <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>priv_key_path<span class=\"token punctuation\">.</span>with_suffix<span class=\"token punctuation\">(</span><span class=\"token string\">\".pub\"</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token decorator annotation punctuation\">@staticmethod</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_dir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">return</span> PathManager<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>root <span class=\"token operator\">/</span> Path<span class=\"token punctuation\">(</span><span class=\"token string\">\".ssh\"</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_ssh_key_pair</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> key_bits<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span> <span class=\"token operator\">=</span> <span class=\"token number\">4096</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        os<span class=\"token punctuation\">.</span>makedirs<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>key_dir<span class=\"token punctuation\">,</span> exist_ok<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\r\n\r\n        key <span class=\"token operator\">=</span> paramiko<span class=\"token punctuation\">.</span>RSAKey<span class=\"token punctuation\">.</span>generate<span class=\"token punctuation\">(</span>bits<span class=\"token operator\">=</span>key_bits<span class=\"token punctuation\">)</span>\r\n        private_key_path <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>create_private_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>key_dir<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>key_name<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>passphrase<span class=\"token punctuation\">)</span>\r\n        public_key_path <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>create_public_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>key_dir<span class=\"token punctuation\">,</span> private_key_path<span class=\"token punctuation\">)</span>\r\n\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"SSH key pair created: Private key: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>private_key_path<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n        self<span class=\"token punctuation\">.</span>logger<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"SSH key pair created: Public key: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>public_key_path<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token keyword\">return</span> private_key_path<span class=\"token punctuation\">,</span> public_key_path\r\n\r\n    <span class=\"token decorator annotation punctuation\">@classmethod</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_public_key</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> key_dir<span class=\"token punctuation\">,</span> private_key_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token triple-quoted-string string\">\"\"\"Private key filepath is appended with .pub to create the pub key file\"\"\"</span>\r\n        public_key_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>key_dir<span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>private_key_path<span class=\"token punctuation\">}</span></span><span class=\"token string\">.pub\"</span></span><span class=\"token punctuation\">)</span>\r\n        public_key <span class=\"token operator\">=</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>key<span class=\"token punctuation\">.</span>get_name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>key<span class=\"token punctuation\">.</span>get_base64<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\r\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>public_key_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> public_key_file<span class=\"token punctuation\">:</span>\r\n            public_key_file<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>public_key<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">return</span> public_key_path\r\n\r\n    <span class=\"token decorator annotation punctuation\">@classmethod</span>\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">create_private_key</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> key_dir<span class=\"token punctuation\">,</span> key_name<span class=\"token punctuation\">,</span> passphrase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        private_key_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>key_dir<span class=\"token punctuation\">,</span> key_name<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>private_key_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> private_key_file<span class=\"token punctuation\">:</span>\r\n            key<span class=\"token punctuation\">.</span>write_private_key_file<span class=\"token punctuation\">(</span>private_key_file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> password<span class=\"token operator\">=</span>passphrase<span class=\"token punctuation\">)</span>\r\n        os<span class=\"token punctuation\">.</span>chmod<span class=\"token punctuation\">(</span>private_key_path<span class=\"token punctuation\">,</span> <span class=\"token number\">0o600</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">return</span> private_key_path\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">read_public_key</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>pub_key_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pub_key<span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">return</span> pub_key<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">def</span> <span class=\"token function\">read_private_key</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>priv_key_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> priv_key<span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">return</span> priv_key<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li><a href=\"#singleton-metaclass\">Singleton Metaclass</a></li>\n<li><a href=\"#basic-stdlib-logger\">Basic Stdlib Logger</a></li>\n<li><a href=\"#basic-smtp-client\">Basic SMTP Client</a></li>\n<li><a href=\"#ssh-keypair-generator\">SSH Keypair Generator</a></li>\n</ul>","frontmatter":{"slug":"random-python-snippets-01","date":"November 11, 2024","title":"Manjana's Random Py Snippets – Part I","description":"Singleton Metaclass, SSH Keypair Generator, Basic Python Logger, SMTP Client","categories":["python"],"tags":["ssh","singleton","smtp"],"featured":false,"series":"Python Snippets"}}},"pageContext":{"id":"d9dae32e-3a07-5c64-83a4-1c624a87f36a","frontmatter__slug":"random-python-snippets-01","__params":{"frontmatter__slug":"random-python-snippets-01"}}},"staticQueryHashes":["333350632"],"slicesMap":{}}